name: CI / Build & Deploy

# Allow manual runs and push triggers
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

# Grant the workflow token the rights needed to push built assets
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-deploy:
    name: Build and Deploy to GitHub Pages
    runs-on: ubuntu-latest
    env:
      # ensure Vite builds with the correct base path for the repository
      VITE_BASE: "/${{ github.event.repository.name }}/"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # ensure we can push tags/branches from the runner using the provided token
          persist-credentials: true
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: gh-pages
          keep_files: false

      - name: Post-deploy health check
        run: |
          # Construct the GitHub Pages URL for the repo (project site)
          OWNER=${{ github.repository_owner }}
          REPO=${{ github.event.repository.name }}
          SITE_URL="https://${OWNER}.github.io/${REPO}/"
          echo "Deployed site URL: ${SITE_URL}"

          echo "Waiting for site to become available..."
          max_attempts=12
          attempt=1
          until [ $attempt -gt $max_attempts ]; do
            status=$(curl -s -o /dev/null -w "%{http_code}" "${SITE_URL}" || true)
            echo "Attempt ${attempt}: HTTP ${status}"
            if [ "${status}" = "200" ]; then
              echo "Site is up: ${SITE_URL}"
              exit 0
            fi
            attempt=$((attempt+1))
            sleep 5
          done

          echo "Health check failed after ${max_attempts} attempts. You can still check the site manually: ${SITE_URL}"
          exit 1
